@model IEnumerable<MapProject.Models.LocationViewModel>
@{
    ViewBag.Title = "Index";
}
<div id="top">
    <div id="row" class="row">
        <div id="right-panel" class="col-xs-3 col-sm-3 col-md-3 col-lg-3">
            <div id="directions-panel"></div>
            <ul id="locationlist">
                @foreach (var item in Model)
                {
                    if (Model.First() == item)
                    { }
                    else
                    {
                        <hr>
                    }

                    <li class="listItem row">
                        @*<input type="checkbox" class="checkbox" id="_checkbox_btn" value="@Html.DisplayFor(modelItem => item.Latitude),@Html.DisplayFor(modelItem => item.Longitude)" />*@

                        <img id="thumbimg" class="img-thumbnail col-xs-5 col-sm-5 col-md-5 col-lg-5" src="data:image;base64,@System.Convert.ToBase64String(item.Picture)">
                        <div id="text" class="col-xs-5 col-sm-5 col-md-5 col-lg-5">
                            @Html.DisplayFor(modelItem => item.Name)<br>
                            @*@Html.DisplayFor(modelItem => item.Latitude)<br>
                            @Html.DisplayFor(modelItem => item.Longitude)<br>
                            @Html.DisplayFor(modelItem => item.Time)<text> Mins</text><br>*@
                            
                            <br />
                            @if (@item.Website != null)
                            {
                                <a href="@item.Website">Website</a><br /><br />
                            }
                            @if (@item.Description != null)
                            {
                                <a class="readmore">Read More</a>
                            }
                        </div>
                        <div id="checkbox" class="col-xs-2 col-sm-2 col-md-2 col-lg-2">
                            <input value="Edit" class="btn btn-warning" type="button" id="Edit" />
                            @Html.HiddenFor(modelItem => item.Id, htmlAttributes: new { id = "LocationID" })
                        </div>
                        <div id="desc">
                            @Html.DisplayFor(modelItem => item.Description)
                        </div>
                        <br><br />
                    </li>
                }
            </ul>
        </div>
        <div id="form" class="col-xs-5 col-sm-5 col-md-5 col-lg-5">
            <div id="addEditForm">
                @Html.Partial("_AddPlace", new MapProject.Models.LocationViewModel())
            </div>
            
        </div>
        <div id="map" class="col-xs-4 col-sm-4 col-md-4 col-lg-4"></div>
        
    </div>
</div>
<script>
    var gmarkers = [];

        function initMap() {
            var directionsService = new google.maps.DirectionsService;
            var directionsDisplay = new google.maps.DirectionsRenderer;
            var map = new google.maps.Map(document.getElementById('map'), {
                zoom: 14,
                center: { lat: 54.27, lng: -8.47 }
            });
            directionsDisplay.setMap(map);

            //document.getElementById('submit').addEventListener('click', function () {
            //    calculateAndDisplayRoute(directionsService, directionsDisplay);
            //});

            google.maps.event.addListener(map, 'click', function (event) {
                var lat = event.latLng.lat();
                var long = event.latLng.lng();
                //alert('Lat: ' + lat + ' and Longitude is: ' + long);
                $('#Latitude').attr('value', lat.toFixed(7));
                $('#Longitude').attr('value', long.toFixed(5));

                placeMarker(event.latLng, map);
                var latitude = event.latLng.lat();
                var longitude = event.latLng.lng();
                //map.panTo(new google.maps.LatLng(latitude, longitude));
            });
        }
        function placeMarker(position, map) {
            for (i = 0; i < gmarkers.length; i++) {
                gmarkers[i].setMap(null);
            }
            var marker = new google.maps.Marker({
                position: position,
                map: map
            });
            gmarkers.push(marker);
            map.panTo(position);
        }
        $(document).ready(function () {
            //$(".container.body-content").css("min-width", "1300px");

            $(".readmore").click(function () {

                var test = $(this).parent().parent()[0].children[3];
                $text = $(test).attr('id');
                //$(test).fadeIn("slow").css("display", "inline-block");
                if ($(test).css('display') == 'none') {
                    $(test).fadeIn("slow").css("display", "inline-block");
                } else {
                    $(test).fadeOut("slow");
                }
            });

            $("#Edit").click(function (e) {
                e.preventDefault();
                var test = $(this).siblings()[0].value;

                @*$.ajax({
                    url: "@Url.Action("AddPlace", "Owner")",
                    type: "GET",
                    dataType: 'string',
                    data: test.toString()
                })
            .done(function (partialViewResult) {
                $("#addEditForm").empty();
                $("#addEditForm").html(partialViewResult);
            });*@

                @*$.post("@Url.Action("AddPlace", "Owner")", { data: test.toString() }, function (data2) {
                    //, list: Locations
                    //alert(data);

                    //toastr.options = {
                    //    "closeButton": false,
                    //    "debug": false,
                    //    "newestOnTop": false,
                    //    "progressBar": false,
                    //    "positionClass": "toast-top-right",
                    //    "preventDuplicates": false,
                    //    "onclick": null,
                    //    "showDuration": "300",
                    //    "hideDuration": "1000",
                    //    "timeOut": "5000",
                    //    "extendedTimeOut": "1000",
                    //    "showEasing": "swing",
                    //    "hideEasing": "linear",
                    //    "showMethod": "fadeIn",
                    //    "hideMethod": "fadeOut"
                    //}
                    //if (data == 1) {
                    //    toastr["success"]("Your Saved Itinerary Has Been Updated")
                    //}
                    //else if (data == 2) {
                    //    toastr["success"]("You Have Saved An Itinerary")
                    //}
                    //else{
                    //    toastr["error"]("Error has occured!")
                    //}

                });*@
                $.get("@Url.Action("AddPlace", "Owner")", { id: test.toString() }, function (data) {
                    //, list: Locations
                    alert(data);

                    //toastr.options = {
                    //    "closeButton": false,
                    //    "debug": false,
                    //    "newestOnTop": false,
                    //    "progressBar": false,
                    //    "positionClass": "toast-top-right",
                    //    "preventDuplicates": false,
                    //    "onclick": null,
                    //    "showDuration": "300",
                    //    "hideDuration": "1000",
                    //    "timeOut": "5000",
                    //    "extendedTimeOut": "1000",
                    //    "showEasing": "swing",
                    //    "hideEasing": "linear",
                    //    "showMethod": "fadeIn",
                    //    "hideMethod": "fadeOut"
                    //}
                    //if (data == 1) {
                    //    toastr["success"]("Your Saved Itinerary Has Been Updated")
                    //}
                    //else if (data == 2) {
                    //    toastr["success"]("You Have Saved An Itinerary")
                    //}
                    //else{
                    //    toastr["error"]("Error has occured!")
                    //}

                });

            });

            $("footer").hide();
            $('#Latitude').prop("readOnly", true);
            $('#Longitude').prop("readOnly", true);
        });
</script>


<script async defer
        src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBw_b25ZsVxp4GvOal3ImsezOFWLU-PMyw&libraries=places&callback=initMap">
</script>
